name: Backend Static Analysis & Type Check

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [develop]
    paths:
      - 'backend/**'

jobs:
  check-backend:
    runs-on: ubuntu-latest
    name: Run Checkstyle, Compile, and Build

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 21 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Checkstyle 실행
      - name: Run Checkstyle
        working-directory: ./backend
        run: ./gradlew checkstyleMain

      # 4. 타입 검사 (컴파일만 수행)
      - name: Type Check (Compile Only)
        working-directory: ./backend
        run: ./gradlew compileJava

      # 5. 빌드 테스트 (테스트 제외)
      - name: Build Backend (Exclude Certain Tests)
        working-directory: ./backend
        run: ./gradlew build -x checkstyleMain -x checkstyleTest -x test
      # 6. 실패 시 Discord 알림 전송 (Checkstyle + Build)
      - name: Notify Discord on failure
        if: failure()
        run: |
          echo "❌ 빌드 또는 정적 분석 실패: Discord에 알림을 전송합니다."

          ########################
          # Checkstyle 오류 추출
          ########################
          CHECKSTYLE_ERRORS=$(grep '<error ' backend/build/reports/checkstyle/*.xml | \
            sed -n 's/.*line="\([0-9]\+\)".*message="\([^"]\+\)".*/❌ Checkstyle: \2 (Line \1)/p' | \
            head -n 3)

          ########################
          # Build 실패 요약 추출
          ########################
          BUILD_ERRORS=$(tail -n 100 backend/build/reports/tests/test/index.html 2>/dev/null | \
            grep -Eo 'test failed.*' | head -n 3)

          ########################
          # 최종 메시지 구성
          ########################
          ERROR_MSG=""
          if [ -n "$CHECKSTYLE_ERRORS" ]; then
            ERROR_MSG="${ERROR_MSG}🔍 *Checkstyle 오류*:\n$CHECKSTYLE_ERRORS\n"
          fi

          if [ -n "$BUILD_ERRORS" ]; then
            ERROR_MSG="${ERROR_MSG}🧪 *Build 실패 요약*:\n$BUILD_ERRORS\n"
          else
            # Fallback (빌드 에러가 잘 안 잡힐 경우)
            ERROR_MSG="${ERROR_MSG}🧪 *Build 실패*:\nbuild.gradle 설정 또는 테스트 실패 가능성 있음.\n"
          fi

          # 줄바꿈 처리
          ERROR_MSG=$(echo -e "$ERROR_MSG" | sed ':a;N;$!ba;s/\n/\\n/g')

          # Discord 전송
          curl -X POST -H "Content-Type: application/json" \
            -d "{\"content\": \"🚨 백엔드 CI 실패 알림:\\n$ERROR_MSG\\n👉 자세한 로그는 GitHub Actions에서 확인하세요.\"}" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
